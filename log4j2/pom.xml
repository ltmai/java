<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.linhmai</groupId>
  <artifactId>example.log4j2</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>example.log4j2</name>
  <url>http://maven.apache.org</url>

  <properties>
    <log4j.version>2.17.0</log4j.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
  </dependencies>
  
  <build>
    <plugins>
      <!-- maven-compiler-plugin allows you to pass parameter to the java compiler -->  
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <compilerArgs>
            <arg>-Xlint:all,-options,-path</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <!--this plugin accepts a main class to execute the jar file with command mvn exec:java -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <configuration>
          <mainClass>com.linhmai.example.log4j2.App</mainClass>
        </configuration>
      </plugin>

    <!-- using maven-dependency-plugin and maven-jar-plugin allows us to run the output .jar file in target folder directly: 
      The maven-dependency-plugin copies the dependencies to path configured with <ouputDirectory>.
      The maven-jar-plugin configures META-INF\MANIFEST.MF to set prefix lib/ to dependencies.
      With these settings we can run: java -jar target\example.log4j2.jar -->
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
            <execution>
                <id>copy-dependencies</id>
                <phase>prepare-package</phase>
                <goals>
                    <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                    <outputDirectory>target\lib</outputDirectory>
                    <overWriteReleases>false</overWriteReleases>
                    <overWriteSnapshots>false</overWriteSnapshots>
                    <overWriteIfNewer>true</overWriteIfNewer>
                </configuration>
            </execution>       
        </executions>
      </plugin>           
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
              <finalName>${project.name}</finalName>
              <archive>
                  <manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile>
                  <manifest>
                      <!-- add entry Class-Path to MANIFEST.MF and set prefix lib/ to all dependencies, e.g.: 
                        Class-Path: lib/log4j-api-2.13.3.jar lib/log4j-core-2.13.3.jar-->
                      <addClasspath>true</addClasspath>
                      <classpathPrefix>lib</classpathPrefix>
                      <mainClass>com.linhmai.example.log4j2.App</mainClass>
                      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                      <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                  </manifest>
                  <!-- additional manifest entries -->
                  <manifestEntries>
                      <URL>http://lini.com</URL>
                      <Implementation-Vendor>BIGINT</Implementation-Vendor>
                  </manifestEntries>
              </archive>
          </configuration>
      </plugin>      
    </plugins>
  </build>
    
</project>

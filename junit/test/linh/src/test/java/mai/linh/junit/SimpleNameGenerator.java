package mai.linh.junit;

import java.lang.reflect.Method;

import org.junit.jupiter.api.DisplayNameGenerator;

/**
 * JUnit Jupiter supports custom display name generators that can be configured via 
 * the @DisplayNameGeneration annotation. Values provided via @DisplayName annotations 
 * always take precedence over display names generated by a DisplayNameGenerator.
 * 
 * The following class generates display name for a class, nested class or method if 
 * they do not already have one (not specified via @Displayname).
 */
class SimpleNameGenerator extends DisplayNameGenerator.ReplaceUnderscores {

    @Override
    public String generateDisplayNameForClass(Class<?> testClass) {
        return super.generateDisplayNameForClass(testClass);
    }

    @Override
    public String generateDisplayNameForNestedClass(Class<?> nestedClass) {
        return super.generateDisplayNameForNestedClass(nestedClass) + "...";
    }

    @Override
    public String generateDisplayNameForMethod(Class<?> testClass, Method testMethod) {
        String name = testClass.getSimpleName() + "::" + testMethod.getName();
        return name.replace('_', ' ') + '.';
    }

}